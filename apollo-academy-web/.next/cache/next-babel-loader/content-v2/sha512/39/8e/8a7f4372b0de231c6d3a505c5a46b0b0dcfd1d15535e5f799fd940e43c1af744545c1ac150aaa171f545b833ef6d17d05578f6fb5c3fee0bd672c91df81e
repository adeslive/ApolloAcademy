{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Box, Flex, Heading, Text, Square, Link, Avatar } from \"@chakra-ui/react\";\nimport React from \"react\";\nimport NextLink from 'next/link';\n\nconst Classroom = (_ref) => {\n  let props = Object.assign({}, _ref);\n  return /*#__PURE__*/_jsxs(Flex, {\n    border: \"1px\",\n    borderColor: \"gray.100\",\n    w: props.size !== \"small\" ? \"20rem\" : '14rem',\n    rounded: \"lg\",\n    bg: \"white\",\n    shadow: \"md\",\n    children: [/*#__PURE__*/_jsx(Square, {\n      bg: \"indigo\",\n      w: \"10%\"\n    }), /*#__PURE__*/_jsxs(Box, {\n      p: \"2rem\",\n      children: [/*#__PURE__*/_jsxs(Text, {\n        ml: \"auto\",\n        as: \"sup\",\n        children: [\"#\", props.id]\n      }), /*#__PURE__*/_jsx(NextLink, {\n        href: \"/course/\" + props.id,\n        children: /*#__PURE__*/_jsx(Link, {\n          children: /*#__PURE__*/_jsx(Heading, {\n            as: \"h3\",\n            size: \"sm\",\n            children: props.course.name\n          })\n        })\n      }), /*#__PURE__*/_jsx(Text, {\n        as: \"sub\",\n        children: props.course.language.name\n      }), /*#__PURE__*/_jsx(Text, {\n        isTruncated: true,\n        noOfLines: 3,\n        mt: \"1rem\",\n        children: props.size !== 'small' && props.description\n      })]\n    }), props.teacher && /*#__PURE__*/_jsx(NextLink, {\n      href: \"/teacher/\" + props.teacher.id,\n      children: /*#__PURE__*/_jsx(Avatar, {\n        name: props.teacher.user.name,\n        mt: \"2rem\",\n        mr: \"2em\"\n      })\n    })]\n  });\n};\n\nexport default Classroom;","map":null,"metadata":{},"sourceType":"module"}