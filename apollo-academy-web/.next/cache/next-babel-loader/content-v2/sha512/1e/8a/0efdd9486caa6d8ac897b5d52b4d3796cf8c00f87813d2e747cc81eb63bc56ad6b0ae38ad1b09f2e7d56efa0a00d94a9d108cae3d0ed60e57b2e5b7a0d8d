{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/Usuario/Documents/Proyectos/apollo-academy/apollo-academy-web/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/Usuario/Documents/Proyectos/apollo-academy/apollo-academy-web/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport _defineProperty from \"C:/Users/Usuario/Documents/Proyectos/apollo-academy/apollo-academy-web/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _slicedToArray from \"C:/Users/Usuario/Documents/Proyectos/apollo-academy/apollo-academy-web/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectDestructuringEmpty from \"C:/Users/Usuario/Documents/Proyectos/apollo-academy/apollo-academy-web/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { Box, Button, Flex, Heading, Link, SimpleGrid, Square, Text } from \"@chakra-ui/react\";\nimport { useElements, useStripe } from \"@stripe/react-stripe-js\";\nimport { Form, Formik } from \"formik\";\nimport { withUrqlClient } from \"next-urql\";\nimport NextLink from 'next/link';\nimport { useRouter } from \"next/router\";\nimport React from \"react\";\nimport Classroom from \"../../components/Classroom\";\nimport { Header } from \"../../components/Header\";\nimport Layout from \"../../components/Layout\";\nimport { useCreateCheckoutSessionMutation, useGetClassroomsQuery, useIsPaidQuery } from \"../../generated/graphql\";\nimport { urqlClient } from \"../../utils/urqlClient\";\nimport moment from 'moment';\n\nvar Course = function Course(_ref) {\n  _objectDestructuringEmpty(_ref);\n\n  var classroom;\n  var body = null;\n  var formFunc = null;\n  var buyButton = null;\n  var info = null;\n  var classCard = null;\n  var router = useRouter();\n  var pid = router.query.pid;\n  var number = typeof router.query.pid === 'string' ? router.query.pid : '-1';\n\n  var _useCreateCheckoutSes = useCreateCheckoutSessionMutation(),\n      _useCreateCheckoutSes2 = _slicedToArray(_useCreateCheckoutSes, 2),\n      checkout = _useCreateCheckoutSes2[1];\n\n  var _useGetClassroomsQuer = useGetClassroomsQuery(),\n      _useGetClassroomsQuer2 = _slicedToArray(_useGetClassroomsQuer, 1),\n      _useGetClassroomsQuer3 = _useGetClassroomsQuer2[0],\n      data = _useGetClassroomsQuer3.data,\n      fetching = _useGetClassroomsQuer3.fetching;\n\n  var stripe = useStripe();\n  var elements = useElements();\n\n  if (fetching) {} else if (!data && !data.classrooms && data.classrooms.length == 0) {} else {\n    var index = data.classrooms.findIndex(function (room) {\n      if (room.id == number) {\n        return room;\n      }\n    });\n    classroom = data.classrooms[index];\n    classCard = /*#__PURE__*/_jsx(Classroom, _objectSpread({}, classroom));\n    info = /*#__PURE__*/_jsxs(_Fragment, {\n      children: [/*#__PURE__*/_jsx(Square, {\n        w: \"100%\",\n        h: \"50%\",\n        bg: \"indigo\"\n      }), /*#__PURE__*/_jsxs(Flex, {\n        w: \"100%\",\n        p: \"2rem\",\n        direction: \"column\",\n        children: [/*#__PURE__*/_jsx(Heading, {\n          as: \"h3\",\n          children: classroom.course.name\n        }), /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsx(Text, {\n          as: \"sub\",\n          children: classroom.course.language.name\n        }), /*#__PURE__*/_jsx(\"br\", {})]\n      })]\n    });\n    body = /*#__PURE__*/_jsx(SimpleGrid, {\n      columns: 3,\n      mt: \"2rem\",\n      spacing: \"2rem\",\n      p: \"2rem\",\n      children: data.classrooms.map(function (value, mapIndex) {\n        if (index != mapIndex) {\n          return /*#__PURE__*/_jsx(Classroom, _objectSpread(_objectSpread({}, value), {}, {\n            size: \"small\"\n          }));\n        }\n      })\n    });\n\n    var _useIsPaidQuery = useIsPaidQuery({\n      pause: number == '-1',\n      variables: {\n        id: number\n      }\n    }),\n        _useIsPaidQuery2 = _slicedToArray(_useIsPaidQuery, 1),\n        paid = _useIsPaidQuery2[0];\n\n    if (paid.fetching) {} else if (!paid.data) {} else {\n      if (!paid.data.isPaid) {\n        formFunc = /*#__PURE__*/function () {\n          var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n            var res;\n            return _regeneratorRuntime.wrap(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    if (!(!stripe || !elements)) {\n                      _context.next = 2;\n                      break;\n                    }\n\n                    return _context.abrupt(\"return\");\n\n                  case 2:\n                    _context.next = 4;\n                    return checkout({\n                      id: classroom.course.id\n                    });\n\n                  case 4:\n                    res = _context.sent;\n                    console.log(res);\n\n                    if (res.data.createCheckout.stripeID) {\n                      stripe.redirectToCheckout({\n                        sessionId: res.data.createCheckout.stripeID\n                      });\n                    }\n\n                  case 7:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, _callee);\n          }));\n\n          return function formFunc() {\n            return _ref2.apply(this, arguments);\n          };\n        }();\n\n        var now = moment();\n        var max = moment(parseInt(classroom.time_start));\n        var min = moment(parseInt(classroom.time_start)).subtract(7, 'days');\n        console.log(now);\n        console.log(min);\n        console.log(max);\n\n        if (now >= min && now < max) {\n          buyButton = /*#__PURE__*/_jsx(Box, {\n            mt: \"4rem\",\n            w: \"20%\",\n            children: /*#__PURE__*/_jsx(Button, {\n              type: \"submit\",\n              w: \"100%\",\n              mr: \"4rem\",\n              colorScheme: \"blue\",\n              children: \"Comprar\"\n            })\n          });\n        } else {\n          buyButton = /*#__PURE__*/_jsx(Box, {\n            mt: \"4rem\",\n            w: \"20%\",\n            children: /*#__PURE__*/_jsx(Button, {\n              type: \"submit\",\n              w: \"100%\",\n              mr: \"4rem\",\n              colorScheme: \"gray\",\n              disabled: true,\n              children: \"No disponible\"\n            })\n          });\n        }\n      } else {\n        buyButton = /*#__PURE__*/_jsx(Box, {\n          mt: \"4rem\",\n          w: \"20%\",\n          children: /*#__PURE__*/_jsx(Link, {\n            w: \"100%\",\n            mr: \"4rem\",\n            color: \"teal\",\n            children: /*#__PURE__*/_jsx(NextLink, {\n              href: \"./meeting/\".concat(classroom.link),\n              children: \"Ingresar\"\n            })\n          })\n        });\n      }\n    }\n  }\n\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(Header, {}), /*#__PURE__*/_jsx(Layout, {\n      children: /*#__PURE__*/_jsx(Formik, {\n        initialValues: {\n          classroom: pid\n        },\n        onSubmit: formFunc,\n        children: function children(_ref3) {\n          var values = _ref3.values,\n              isSubmitting = _ref3.isSubmitting;\n          return /*#__PURE__*/_jsx(Form, {\n            children: /*#__PURE__*/_jsxs(Flex, {\n              direction: \"row\",\n              w: \"100wh\",\n              h: \"80vh\",\n              children: [/*#__PURE__*/_jsx(Box, {\n                rounded: \"md\",\n                shadow: \"md\",\n                w: \"30%\",\n                h: \"80%\",\n                borderColor: \"gray.100\",\n                children: info\n              }), /*#__PURE__*/_jsxs(Flex, {\n                ml: \"2rem\",\n                direction: \"column\",\n                w: \"100%\",\n                children: [/*#__PURE__*/_jsxs(Flex, {\n                  w: \"100%\",\n                  rounded: \"md\",\n                  shadow: \"md\",\n                  p: \"2rem\",\n                  children: [/*#__PURE__*/_jsxs(Box, {\n                    w: \"80%\",\n                    children: [/*#__PURE__*/_jsx(Heading, {\n                      as: \"h4\",\n                      mb: \"2rem\",\n                      children: \"Clase actual\"\n                    }), classCard]\n                  }), buyButton]\n                }), /*#__PURE__*/_jsx(Box, {\n                  rounded: \"md\",\n                  shadow: \"md\",\n                  children: body\n                })]\n              })]\n            })\n          });\n        }\n      })\n    })]\n  });\n};\n\nexport default withUrqlClient(urqlClient, {\n  ssr: true\n})(Course);","map":null,"metadata":{},"sourceType":"module"}