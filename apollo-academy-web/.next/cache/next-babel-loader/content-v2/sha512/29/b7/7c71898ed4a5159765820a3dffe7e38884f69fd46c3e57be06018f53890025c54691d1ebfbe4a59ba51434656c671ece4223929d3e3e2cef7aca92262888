{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Box, Flex, Heading, Link, Text } from '@chakra-ui/layout';\nimport { Avatar, useForceUpdate } from '@chakra-ui/react';\nimport { withUrqlClient } from 'next-urql';\nimport NextLink from \"next/link\";\nimport { useRouter } from 'next/router';\nimport React, { useState } from \"react\";\nimport Layout from \"../../components/Layout\";\nimport { NavBar } from \"../../components/NavBar\";\nimport { useMyReceiptsQuery, useReceiptMutation } from \"../../generated/graphql\";\nimport { urqlClient } from \"../../utils/urqlClient\";\n\nconst History = () => {\n  let receipts = null;\n  const {\n    0: receipt,\n    1: setReceipt\n  } = useState(null);\n  const router = useRouter();\n  const update = useForceUpdate();\n  const {\n    pid\n  } = router.query;\n  const id = typeof pid == 'string' && pid != '' ? pid : '-1';\n  const [{\n    fetching,\n    data\n  }] = useMyReceiptsQuery();\n  const [, getReceipt] = useReceiptMutation();\n\n  const fetchInfo = async id => {\n    const response = await getReceipt({\n      id: id\n    });\n\n    if (response.data) {\n      let info = response.data.receipt;\n      let date = new Date(parseInt(info.createdAt));\n      setReceipt( /*#__PURE__*/_jsxs(Box, {\n        px: \"4rem\",\n        py: \"2rem\",\n        border: '1px',\n        borderColor: \"gray.200\",\n        backgroundColor: \"gray.100\",\n        children: [/*#__PURE__*/_jsx(Heading, {\n          as: \"h1\",\n          size: \"xl\",\n          children: info.virtual.course.name\n        }), /*#__PURE__*/_jsxs(Text, {\n          as: \"sub\",\n          size: \"md\",\n          children: [\"Clase # \", info.virtual.id]\n        }), /*#__PURE__*/_jsxs(Box, {\n          mt: \"1rem\",\n          children: [/*#__PURE__*/_jsx(Heading, {\n            as: \"h2\",\n            size: \"md\",\n            children: \"Descripci\\xF3n\"\n          }), /*#__PURE__*/_jsxs(Text, {\n            my: \"2rem\",\n            px: \"2rem\",\n            children: [\"\\\" \", info.virtual.description, \" \\\"\"]\n          })]\n        }), /*#__PURE__*/_jsxs(Box, {\n          children: [/*#__PURE__*/_jsx(Heading, {\n            as: \"h2\",\n            size: \"md\",\n            children: \"Docente\"\n          }), /*#__PURE__*/_jsxs(Flex, {\n            children: [/*#__PURE__*/_jsx(NextLink, {\n              href: \"/teacher/\" + info.virtual.teacher.id,\n              children: /*#__PURE__*/_jsx(Avatar, {\n                size: \"lg\",\n                name: info.virtual.teacher.user.name,\n                mt: \"2rem\",\n                mr: \"2em\",\n                cursor: \"pointer\"\n              })\n            }), /*#__PURE__*/_jsxs(Flex, {\n              direction: \"column\",\n              mt: \"2rem\",\n              children: [/*#__PURE__*/_jsx(Text, {\n                children: info.virtual.teacher.user.name\n              }), /*#__PURE__*/_jsx(Text, {\n                children: info.virtual.teacher.user.email\n              })]\n            })]\n          })]\n        }), /*#__PURE__*/_jsxs(Box, {\n          mt: \"2rem\",\n          children: [/*#__PURE__*/_jsx(Heading, {\n            as: \"h2\",\n            size: \"md\",\n            children: \"Informaci\\xF3n Relevante\"\n          }), /*#__PURE__*/_jsxs(Text, {\n            mt: \"2rem\",\n            children: [\"Pagado: $\", info.amount]\n          }), /*#__PURE__*/_jsxs(Text, {\n            children: [\"Fecha de pago: \", date.toLocaleString()]\n          })]\n        })]\n      }));\n      update();\n    }\n  };\n\n  if (fetching) {} else if (!data && !data.myreceipts) {} else {\n    receipts = /*#__PURE__*/_jsx(_Fragment, {\n      children: data.myreceipts.map((value, mapIndex) => {\n        let fecha = new Date(parseInt(value.createdAt)).toLocaleString();\n        return /*#__PURE__*/_jsxs(Box, {\n          rounded: \"md\",\n          p: \"2rem\",\n          border: '1px',\n          borderColor: \"gray.200\",\n          backgroundColor: \"gray.100\",\n          children: [/*#__PURE__*/_jsx(Text, {\n            ml: \"auto\",\n            as: \"sup\",\n            children: fecha\n          }), /*#__PURE__*/_jsx(Link, {\n            onClick: () => fetchInfo(value.id),\n            children: /*#__PURE__*/_jsx(Heading, {\n              as: \"h3\",\n              size: \"sm\",\n              children: value.id\n            })\n          }), /*#__PURE__*/_jsxs(Text, {\n            as: \"sub\",\n            children: [\"Pagado por: $\", value.amount]\n          })]\n        });\n      })\n    });\n  }\n\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(NavBar, {}), /*#__PURE__*/_jsx(Layout, {\n      size: \"big\",\n      children: /*#__PURE__*/_jsxs(Flex, {\n        gridGap: 4,\n        h: \"100%\",\n        children: [/*#__PURE__*/_jsx(Flex, {\n          w: ['25%'],\n          flexDir: 'column',\n          children: receipts\n        }), /*#__PURE__*/_jsx(Box, {\n          w: ['75%'],\n          children: receipt\n        })]\n      })\n    })]\n  });\n};\n\nexport default withUrqlClient(urqlClient)(History);","map":null,"metadata":{},"sourceType":"module"}