{"ast":null,"code":"import { cacheExchange } from '@urql/exchange-graphcache';\nimport { dedupExchange, fetchExchange } from \"urql\";\nimport { VerifyLoginDocument } from \"../generated/graphql\";\nimport { updateQuery } from './updateQuery';\nexport const urqlClient = ssrExchange => ({\n  url: \"http://localhost:8080/graphql\",\n  fetchOptions: {\n    credentials: \"include\"\n  },\n  exchanges: [dedupExchange, cacheExchange({\n    updates: {\n      Mutation: {\n        logout: (_result, args, cache, info) => {\n          updateQuery(cache, {\n            query: VerifyLoginDocument\n          }, _result, () => ({\n            verifyLogin: null\n          }));\n        },\n        register: (_result, args, cache, info) => {\n          updateQuery(cache, {\n            query: VerifyLoginDocument\n          }, _result, (result, query) => {\n            if (result.register.errors) {\n              return query;\n            } else {\n              return {\n                verifyLogin: result.register.user\n              };\n            }\n          });\n        },\n        login: (_result, args, cache, info) => {\n          updateQuery(cache, {\n            query: VerifyLoginDocument\n          }, _result, (result, query) => {\n            if (result.login.errors) {\n              return query;\n            } else {\n              return {\n                verifyLogin: result.login.user\n              };\n            }\n          });\n        }\n      }\n    }\n  }), ssrExchange, fetchExchange]\n});","map":null,"metadata":{},"sourceType":"module"}