{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Usuario\\\\Documents\\\\Proyectos\\\\apollo-academy\\\\apollo-academy-web\\\\pages\\\\course\\\\[pid].tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Box, Button, Flex, Heading, Link, SimpleGrid, Square, Text } from \"@chakra-ui/react\";\nimport { useElements, useStripe } from \"@stripe/react-stripe-js\";\nimport { Form, Formik } from \"formik\";\nimport { withUrqlClient } from \"next-urql\";\nimport NextLink from 'next/link';\nimport { useRouter } from \"next/router\";\nimport React from \"react\";\nimport Classroom from \"../../components/Classroom\";\nimport { Header } from \"../../components/Header\";\nimport Layout from \"../../components/Layout\";\nimport { useCreateCheckoutSessionMutation, useGetClassroomsQuery, useIsPaidQuery } from \"../../generated/graphql\";\nimport { urqlClient } from \"../../utils/urqlClient\";\nimport moment from 'moment';\n\nconst Course = ({}) => {\n  let classroom;\n  let body = null;\n  let formFunc = null;\n  let buyButton = null;\n  let info = null;\n  let classCard = null;\n  const router = useRouter();\n  const {\n    pid\n  } = router.query;\n  const number = typeof router.query.pid === 'string' ? router.query.pid : '-1';\n  const [, checkout] = useCreateCheckoutSessionMutation();\n  const [{\n    data,\n    fetching\n  }] = useGetClassroomsQuery();\n  const stripe = useStripe();\n  const elements = useElements();\n\n  if (fetching) {} else if (!data && !data.classrooms && data.classrooms.length == 0) {} else {\n    let index = data.classrooms.findIndex(room => {\n      if (room.id == number) {\n        return room;\n      }\n    });\n    classroom = data.classrooms[index];\n    classCard = /*#__PURE__*/_jsxDEV(Classroom, _objectSpread({}, classroom), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 21\n    }, this);\n    info = /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Square, {\n        w: \"100%\",\n        h: \"50%\",\n        bg: \"indigo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        w: \"100%\",\n        p: \"2rem\",\n        direction: \"column\",\n        children: [/*#__PURE__*/_jsxDEV(Heading, {\n          as: \"h3\",\n          children: classroom.course.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          as: \"sub\",\n          children: classroom.course.language.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n    body = /*#__PURE__*/_jsxDEV(SimpleGrid, {\n      columns: 3,\n      mt: \"2rem\",\n      spacing: \"2rem\",\n      p: \"2rem\",\n      children: data.classrooms.map((value, mapIndex) => {\n        if (index != mapIndex) {\n          return /*#__PURE__*/_jsxDEV(Classroom, _objectSpread(_objectSpread({}, value), {}, {\n            size: \"small\"\n          }), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 32\n          }, this);\n        }\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this);\n    const [paid] = useIsPaidQuery({\n      pause: number == '-1',\n      variables: {\n        id: number\n      }\n    });\n\n    if (paid.fetching) {} else if (!paid.data) {} else {\n      if (!paid.data.isPaid) {\n        formFunc = async () => {\n          if (!stripe || !elements) {\n            return;\n          }\n\n          const res = await checkout({\n            id: classroom.course.id\n          });\n          console.log(res);\n\n          if (res.data.createCheckout.stripeID) {\n            stripe.redirectToCheckout({\n              sessionId: res.data.createCheckout.stripeID\n            });\n          }\n        };\n\n        let now = moment();\n        let max = moment(parseInt(classroom.time_start));\n        let min = moment(parseInt(classroom.time_start)).subtract(7, 'days');\n        console.log(now);\n        console.log(min);\n        console.log(max);\n\n        if (now >= min && now < max) {\n          buyButton = /*#__PURE__*/_jsxDEV(Box, {\n            mt: \"4rem\",\n            w: \"20%\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              w: \"100%\",\n              mr: \"4rem\",\n              colorScheme: \"blue\",\n              children: \"Comprar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 25\n          }, this);\n        } else {\n          buyButton = /*#__PURE__*/_jsxDEV(Box, {\n            mt: \"4rem\",\n            w: \"20%\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              w: \"100%\",\n              mr: \"4rem\",\n              colorScheme: \"gray\",\n              disabled: true,\n              children: \"No disponible\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 25\n          }, this);\n        }\n      } else {\n        buyButton = /*#__PURE__*/_jsxDEV(Box, {\n          mt: \"4rem\",\n          w: \"20%\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            w: \"100%\",\n            mr: \"4rem\",\n            color: \"teal\",\n            children: /*#__PURE__*/_jsxDEV(NextLink, {\n              href: `./meeting/${classroom.link}`,\n              children: \"Ingresar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }, this);\n      }\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Layout, {\n      children: /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          classroom: pid\n        },\n        onSubmit: formFunc,\n        children: ({\n          values,\n          isSubmitting\n        }) => /*#__PURE__*/_jsxDEV(Form, {\n          children: /*#__PURE__*/_jsxDEV(Flex, {\n            direction: \"row\",\n            w: \"100wh\",\n            h: \"80vh\",\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              rounded: \"md\",\n              shadow: \"md\",\n              w: \"30%\",\n              h: \"80%\",\n              borderColor: \"gray.100\",\n              children: info\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Flex, {\n              ml: \"2rem\",\n              direction: \"column\",\n              w: \"100%\",\n              children: [/*#__PURE__*/_jsxDEV(Flex, {\n                w: \"100%\",\n                rounded: \"md\",\n                shadow: \"md\",\n                p: \"2rem\",\n                children: [/*#__PURE__*/_jsxDEV(Box, {\n                  w: \"80%\",\n                  children: [/*#__PURE__*/_jsxDEV(Heading, {\n                    as: \"h4\",\n                    mb: \"2rem\",\n                    children: \"Clase actual\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 151,\n                    columnNumber: 45\n                  }, this), classCard]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 150,\n                  columnNumber: 41\n                }, this), buyButton]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                rounded: \"md\",\n                shadow: \"md\",\n                children: body\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\nexport default withUrqlClient(urqlClient, {\n  ssr: true\n})(Course);","map":{"version":3,"sources":["C:/Users/Usuario/Documents/Proyectos/apollo-academy/apollo-academy-web/pages/course/[pid].tsx"],"names":["Box","Button","Flex","Heading","Link","SimpleGrid","Square","Text","useElements","useStripe","Form","Formik","withUrqlClient","NextLink","useRouter","React","Classroom","Header","Layout","useCreateCheckoutSessionMutation","useGetClassroomsQuery","useIsPaidQuery","urqlClient","moment","Course","classroom","body","formFunc","buyButton","info","classCard","router","pid","query","number","checkout","data","fetching","stripe","elements","classrooms","length","index","findIndex","room","id","course","name","language","map","value","mapIndex","paid","pause","variables","isPaid","res","console","log","createCheckout","stripeID","redirectToCheckout","sessionId","now","max","parseInt","time_start","min","subtract","link","values","isSubmitting","ssr"],"mappings":"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","sourcesContent":["\r\nimport { Box, Button, Flex, Heading, Link, SimpleGrid, Square, Text } from \"@chakra-ui/react\";\r\nimport { useElements, useStripe } from \"@stripe/react-stripe-js\";\r\nimport { Form, Formik } from \"formik\";\r\nimport { withUrqlClient } from \"next-urql\";\r\nimport NextLink from 'next/link';\r\nimport { useRouter } from \"next/router\";\r\nimport React from \"react\";\r\nimport Classroom from \"../../components/Classroom\";\r\nimport { Header } from \"../../components/Header\";\r\nimport Layout from \"../../components/Layout\";\r\nimport { useCreateCheckoutSessionMutation, useGetClassroomsQuery, useIsPaidQuery } from \"../../generated/graphql\";\r\nimport { urqlClient } from \"../../utils/urqlClient\";\r\nimport moment from 'moment';\r\n\r\ninterface CourseProps { }\r\n\r\nconst Course: React.FC<CourseProps> = ({ }) => {\r\n    let classroom: typeof data.classrooms[0];\r\n    let body = null;\r\n    let formFunc = null;\r\n    let buyButton = null;\r\n    let info = null;\r\n    let classCard = null;\r\n\r\n    const router = useRouter();\r\n    const { pid } = router.query;\r\n    const number = typeof router.query.pid === 'string' ? router.query.pid : '-1';\r\n\r\n    const [, checkout] = useCreateCheckoutSessionMutation();\r\n    const [{ data, fetching }] = useGetClassroomsQuery();\r\n\r\n\r\n    const stripe = useStripe();\r\n    const elements = useElements();\r\n\r\n\r\n\r\n    if (fetching) {\r\n\r\n    } else if (!data && !data.classrooms && data.classrooms.length == 0) {\r\n\r\n    } else {\r\n        let index = data.classrooms.findIndex((room) => {\r\n            if (room.id == number) {\r\n                return room;\r\n            }\r\n        })\r\n\r\n        classroom = data.classrooms[index];\r\n\r\n        classCard = <Classroom {...classroom} />;\r\n\r\n        info = (\r\n            <>\r\n                <Square w=\"100%\" h=\"50%\" bg=\"indigo\" />\r\n                <Flex w=\"100%\" p=\"2rem\" direction=\"column\">\r\n                    <Heading as=\"h3\">{classroom.course.name}</Heading>\r\n                    <br />\r\n                    <Text as=\"sub\">{classroom.course.language.name}</Text>\r\n                    <br />\r\n                </Flex>\r\n            </>\r\n        )\r\n\r\n        body = (\r\n            <SimpleGrid columns={3} mt=\"2rem\" spacing=\"2rem\" p=\"2rem\">\r\n                {data.classrooms.map((value, mapIndex) => {\r\n                    if (index != mapIndex) {\r\n                        return <Classroom {...value} size=\"small\" />\r\n                    }\r\n                })}\r\n            </SimpleGrid>\r\n        )\r\n\r\n        const [paid] = useIsPaidQuery({\r\n            pause: number == '-1',\r\n            variables: { id: number }\r\n        })\r\n        if (paid.fetching) {\r\n\r\n        } else if (!paid.data) {\r\n\r\n        } else {\r\n            if (!paid.data.isPaid) {\r\n                formFunc = async () => {\r\n                    if (!stripe || !elements) {\r\n                        return;\r\n                    }\r\n\r\n                    const res = await checkout({ id: classroom.course.id });\r\n                    console.log(res);\r\n                    if (res.data.createCheckout.stripeID) {\r\n                        stripe.redirectToCheckout({ sessionId: res.data.createCheckout.stripeID });\r\n                    }\r\n                }\r\n\r\n                let now = moment();\r\n                let max = moment(parseInt(classroom.time_start));\r\n                let min = moment(parseInt(classroom.time_start)).subtract(7, 'days');\r\n\r\n                console.log(now)\r\n                console.log(min)\r\n                console.log(max)\r\n\r\n                if(now >= min && now < max)\r\n                {\r\n                    buyButton = (\r\n                        <Box mt=\"4rem\" w=\"20%\">\r\n                            <Button type=\"submit\" w=\"100%\" mr=\"4rem\" colorScheme=\"blue\">Comprar</Button>\r\n                        </Box>\r\n                    )\r\n                }else{\r\n                    buyButton = (\r\n                        <Box mt=\"4rem\" w=\"20%\">\r\n                            <Button type=\"submit\" w=\"100%\" mr=\"4rem\" colorScheme=\"gray\" disabled>No disponible</Button>\r\n                        </Box>\r\n                    )\r\n                }\r\n            } else {\r\n                buyButton = (\r\n                    <Box mt=\"4rem\" w=\"20%\">\r\n                        <Link w=\"100%\" mr=\"4rem\" color=\"teal\">\r\n                            <NextLink href={`./meeting/${classroom.link}`}>\r\n                                Ingresar\r\n                            </NextLink> \r\n                        </Link>\r\n                    </Box>\r\n                )\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Header />\r\n            <Layout>\r\n                <Formik\r\n                    initialValues={{ classroom: pid }}\r\n                    onSubmit={formFunc}\r\n                >\r\n                    {({ values, isSubmitting }) => (\r\n                        <Form>\r\n                            <Flex direction=\"row\" w=\"100wh\" h=\"80vh\">\r\n                                <Box rounded=\"md\" shadow=\"md\" w=\"30%\" h=\"80%\" borderColor=\"gray.100\">\r\n                                    {info}\r\n                                </Box>\r\n                                <Flex ml=\"2rem\" direction=\"column\" w=\"100%\">\r\n                                    <Flex w=\"100%\" rounded=\"md\" shadow=\"md\" p=\"2rem\">\r\n                                        <Box w=\"80%\">\r\n                                            <Heading as=\"h4\" mb=\"2rem\">Clase actual</Heading>\r\n                                            {classCard}\r\n                                        </Box>\r\n\r\n                                        {buyButton}\r\n                                    </Flex>\r\n                                    <Box rounded=\"md\" shadow=\"md\">\r\n                                        {body}\r\n                                    </Box>\r\n                                </Flex>\r\n                            </Flex>\r\n                        </Form>\r\n                    )}\r\n                </Formik>\r\n            </Layout>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default withUrqlClient(urqlClient, { ssr: true })(Course);"]},"metadata":{},"sourceType":"module"}