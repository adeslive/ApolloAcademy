{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _slicedToArray from \"C:/Users/Usuario/Documents/Proyectos/apollo-academy/apollo-academy-web/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { withUrqlClient } from 'next-urql';\nimport React, { useState } from 'react';\nimport CourseCalendar from '../../components/CourseCalendar';\nimport Layout from '../../components/Layout';\nimport { NavBar } from '../../components/NavBar';\nimport { useGetClassroomsQuery } from '../../generated/graphql';\nimport { urqlClient } from '../../utils/urqlClient';\nimport moment from 'moment';\n\nvar MyCalendar = function MyCalendar() {\n  var _useGetClassroomsQuer = useGetClassroomsQuery(),\n      _useGetClassroomsQuer2 = _slicedToArray(_useGetClassroomsQuer, 1),\n      _useGetClassroomsQuer3 = _useGetClassroomsQuer2[0],\n      data = _useGetClassroomsQuer3.data,\n      fetching = _useGetClassroomsQuer3.fetching;\n\n  var _useState = useState([]),\n      events = _useState[0],\n      setEvents = _useState[1];\n\n  var newEvents = [];\n\n  if (fetching) {} else if (!data || !data.classrooms) {} else if (data) {\n    data.classrooms.forEach(function (value, index) {\n      var temp = {};\n      temp.allDay = false;\n      temp.start = moment(parseInt(value.time_start)).subtract(7, 'days').toDate();\n      temp.end = moment(parseInt(value.time_start)).toDate();\n      temp.title = value.course.name;\n      newEvents.push(temp);\n    });\n  }\n\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(NavBar, {}), /*#__PURE__*/_jsx(Layout, {\n      size: \"big\",\n      children: /*#__PURE__*/_jsx(CourseCalendar, {\n        events: newEvents\n      })\n    })]\n  });\n};\n\nexport default withUrqlClient(urqlClient)(MyCalendar);","map":null,"metadata":{},"sourceType":"module"}