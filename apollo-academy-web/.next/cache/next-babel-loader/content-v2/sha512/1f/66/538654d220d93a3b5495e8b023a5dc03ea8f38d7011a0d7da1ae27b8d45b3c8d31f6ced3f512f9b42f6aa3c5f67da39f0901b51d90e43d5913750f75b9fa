{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { withUrqlClient } from 'next-urql';\nimport React, { useState } from 'react';\nimport CourseCalendar from '../../components/CourseCalendar';\nimport Layout from '../../components/Layout';\nimport { NavBar } from '../../components/NavBar';\nimport { useGetClassroomsQuery } from '../../generated/graphql';\nimport { urqlClient } from '../../utils/urqlClient';\nimport moment from 'moment';\n\nconst MyCalendar = () => {\n  const [{\n    data,\n    fetching\n  }] = useGetClassroomsQuery();\n  const {\n    0: events,\n    1: setEvents\n  } = useState([]);\n  let newEvents = [];\n\n  if (fetching) {} else if (!data || !data.classrooms) {} else if (data) {\n    data.classrooms.forEach((value, index) => {\n      let temp = {};\n      temp.allDay = false;\n      temp.start = moment(parseInt(value.time_start)).subtract(7, 'days').toDate();\n      temp.end = moment(parseInt(value.time_start)).toDate();\n      temp.title = value.course.name;\n      newEvents.push(temp);\n    });\n  }\n\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(NavBar, {}), /*#__PURE__*/_jsx(Layout, {\n      size: \"big\",\n      children: /*#__PURE__*/_jsx(CourseCalendar, {\n        events: newEvents\n      })\n    })]\n  });\n};\n\nexport default withUrqlClient(urqlClient)(MyCalendar);","map":null,"metadata":{},"sourceType":"module"}