{"ast":null,"code":"import _defineProperty from \"C:/Users/Usuario/Documents/Proyectos/apollo-academy/apollo-academy-web/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"C:/Users/Usuario/Documents/Proyectos/apollo-academy/apollo-academy-web/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"C:/Users/Usuario/Documents/Proyectos/apollo-academy/apollo-academy-web/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Usuario\\\\Documents\\\\Proyectos\\\\apollo-academy\\\\apollo-academy-web\\\\components\\\\InputField.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { FormControl, FormErrorMessage, FormLabel, Input } from '@chakra-ui/react';\nimport { useField } from 'formik';\nimport React from 'react';\n\nvar InputField = function InputField(_ref) {\n  _s();\n\n  var _ = _ref.size,\n      props = _objectWithoutProperties(_ref, [\"size\"]);\n\n  var _useField = useField(props),\n      _useField2 = _slicedToArray(_useField, 2),\n      field = _useField2[0],\n      error = _useField2[1].error;\n\n  return /*#__PURE__*/_jsxDEV(FormControl, {\n    isInvalid: !!error,\n    children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n      htmlFor: field.name,\n      children: props.label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(Input, _objectSpread(_objectSpread(_objectSpread({}, field), props), {}, {\n      id: field.name\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, _this), error ? /*#__PURE__*/_jsxDEV(FormErrorMessage, {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 22\n    }, _this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(InputField, \"nhmC+UmEMIIN+X7Gqu636jCC1cM=\", false, function () {\n  return [useField];\n});\n\n_c = InputField;\nexport default InputField;\n\nvar _c;\n\n$RefreshReg$(_c, \"InputField\");","map":{"version":3,"sources":["C:/Users/Usuario/Documents/Proyectos/apollo-academy/apollo-academy-web/components/InputField.tsx"],"names":["FormControl","FormErrorMessage","FormLabel","Input","useField","React","InputField","_","size","props","field","error","name","label"],"mappings":";;;;;;;;;;;;;AAAA,SAASA,WAAT,EAAsBC,gBAAtB,EAAwCC,SAAxC,EAAmDC,KAAnD,QAAgE,kBAAhE;AACA,SAASC,QAAT,QAAyB,QAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAOA,IAAMC,UAAsC,GAAG,SAAzCA,UAAyC,OAAwB;AAAA;;AAAA,MAAjBC,CAAiB,QAAtBC,IAAsB;AAAA,MAAXC,KAAW;;AAAA,kBACxCL,QAAQ,CAACK,KAAD,CADgC;AAAA;AAAA,MAC5DC,KAD4D;AAAA,MACpDC,KADoD,iBACpDA,KADoD;;AAEnE,sBACI,QAAC,WAAD;AAAa,IAAA,SAAS,EAAE,CAAC,CAACA,KAA1B;AAAA,4BACI,QAAC,SAAD;AAAW,MAAA,OAAO,EAAED,KAAK,CAACE,IAA1B;AAAA,gBAAiCH,KAAK,CAACI;AAAvC;AAAA;AAAA;AAAA;AAAA,aADJ,eAEI,QAAC,KAAD,gDAAWH,KAAX,GAAsBD,KAAtB;AAA6B,MAAA,EAAE,EAAEC,KAAK,CAACE;AAAvC;AAAA;AAAA;AAAA;AAAA,aAFJ,EAGKD,KAAK,gBAAG,QAAC,gBAAD;AAAA,gBAAmBA;AAAnB;AAAA;AAAA;AAAA;AAAA,aAAH,GAAkD,IAH5D;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ;AAOH,CATD;;GAAML,U;UACyBF,Q;;;KADzBE,U;AAWN,eAAeA,UAAf","sourcesContent":["import { FormControl, FormErrorMessage, FormLabel, Input } from '@chakra-ui/react';\r\nimport { useField } from 'formik';\r\nimport React from 'react';\r\n\r\ntype InputFieldProps = React.InputHTMLAttributes<HTMLInputElement> & {\r\n    name: string;\r\n    label: string;\r\n};\r\n\r\nconst InputField : React.FC<InputFieldProps> = ({size:_, ...props}) => {\r\n    const [field, {error, }] = useField(props);\r\n    return (\r\n        <FormControl isInvalid={!!error}>\r\n            <FormLabel htmlFor={field.name}>{props.label}</FormLabel>\r\n            <Input {...field} {...props} id={field.name} />\r\n            {error ? <FormErrorMessage>{error}</FormErrorMessage> : null}\r\n        </FormControl>\r\n    );\r\n}\r\n\r\nexport default InputField;"]},"metadata":{},"sourceType":"module"}