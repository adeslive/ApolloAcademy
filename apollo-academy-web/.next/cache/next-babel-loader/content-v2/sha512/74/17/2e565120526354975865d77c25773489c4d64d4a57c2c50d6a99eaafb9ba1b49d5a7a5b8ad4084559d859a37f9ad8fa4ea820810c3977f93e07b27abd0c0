{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport gql from 'graphql-tag';\nimport * as Urql from 'urql';\nexport const RegularUserFragmentDoc = gql`\n    fragment RegularUser on User {\n  id\n  name\n  email\n}\n    `;\nexport const RegularClassroomFragmentDoc = gql`\n    fragment RegularClassroom on VirtualClassroom {\n  id\n  teacher {\n    id\n    user {\n      ...RegularUser\n    }\n  }\n  capacity\n  link\n  createdAt\n  updatedAt\n  enable\n}\n    ${RegularUserFragmentDoc}`;\nexport const RegularCourseFragmentDoc = gql`\n    fragment RegularCourse on Course {\n  id\n  name\n  price\n  language {\n    id\n    name\n    code\n  }\n}\n    `;\nexport const GetActivitiesDocument = gql`\n    mutation GetActivities($date: DateTime!) {\n  activities(date: $date) {\n    id\n    link\n    description\n    capacity\n    time_start\n    course {\n      id\n      name\n    }\n  }\n}\n    `;\nexport function useGetActivitiesMutation() {\n  return Urql.useMutation(GetActivitiesDocument);\n}\n;\nexport const ChangeClassRoomStateDocument = gql`\n    mutation changeClassRoomState($id: ID!, $state: Boolean!) {\n  changeClassRoomState(id: $id, newState: $state)\n}\n    `;\nexport function useChangeClassRoomStateMutation() {\n  return Urql.useMutation(ChangeClassRoomStateDocument);\n}\n;\nexport const ChangeCourseStateDocument = gql`\n    mutation changeCourseState($id: ID!, $state: Boolean!) {\n  changeCourseState(id: $id, newState: $state)\n}\n    `;\nexport function useChangeCourseStateMutation() {\n  return Urql.useMutation(ChangeCourseStateDocument);\n}\n;\nexport const ChangePasswordDocument = gql`\n    mutation changePassword($password: String!, $email: String!) {\n  changePassword(password: $password, email: $email) {\n    errors {\n      field\n      message\n    }\n    user {\n      ...RegularUser\n    }\n  }\n}\n    ${RegularUserFragmentDoc}`;\nexport function useChangePasswordMutation() {\n  return Urql.useMutation(ChangePasswordDocument);\n}\n;\nexport const CreateCheckoutSessionDocument = gql`\n    mutation createCheckoutSession($id: ID!) {\n  createCheckout(classroom: $id) {\n    errors {\n      field\n      message\n    }\n    stripeID\n  }\n}\n    `;\nexport function useCreateCheckoutSessionMutation() {\n  return Urql.useMutation(CreateCheckoutSessionDocument);\n}\n;\nexport const GetcodeDocument = gql`\n    mutation getcode($email: String!) {\n  getCode(email: $email) {\n    errors {\n      field\n      message\n    }\n    user {\n      ...RegularUser\n    }\n  }\n}\n    ${RegularUserFragmentDoc}`;\nexport function useGetcodeMutation() {\n  return Urql.useMutation(GetcodeDocument);\n}\n;\nexport const LoginDocument = gql`\n    mutation Login($email: String!, $password: String!) {\n  login(password: $password, email: $email) {\n    errors {\n      field\n      message\n    }\n    user {\n      ...RegularUser\n    }\n  }\n}\n    ${RegularUserFragmentDoc}`;\nexport function useLoginMutation() {\n  return Urql.useMutation(LoginDocument);\n}\n;\nexport const LogoutDocument = gql`\n    mutation logout {\n  logout\n}\n    `;\nexport function useLogoutMutation() {\n  return Urql.useMutation(LogoutDocument);\n}\n;\nexport const PayDocument = gql`\n    mutation pay($id: ID!, $key: String!) {\n  pay(classroom: $id, key: $key) {\n    errors {\n      field\n      message\n    }\n    receipt {\n      id\n      amount\n    }\n  }\n}\n    `;\nexport function usePayMutation() {\n  return Urql.useMutation(PayDocument);\n}\n;\nexport const ReceiptDocument = gql`\n    mutation Receipt($id: ID!) {\n  receipt(id: $id) {\n    id\n    paid\n    amount\n    createdAt\n    virtual {\n      id\n      description\n      capacity\n      enable\n      teacher {\n        id\n        user {\n          id\n          name\n          email\n        }\n      }\n      course {\n        id\n        name\n        createdAt\n        updatedAt\n        language {\n          id\n          name\n        }\n      }\n    }\n  }\n}\n    `;\nexport function useReceiptMutation() {\n  return Urql.useMutation(ReceiptDocument);\n}\n;\nexport const RegisterDocument = gql`\n    mutation Register($name: String!, $email: String!, $password: String!) {\n  register(name: $name, email: $email, password: $password) {\n    errors {\n      field\n      message\n    }\n    user {\n      ...RegularUser\n    }\n  }\n}\n    ${RegularUserFragmentDoc}`;\nexport function useRegisterMutation() {\n  return Urql.useMutation(RegisterDocument);\n}\n;\nexport const RestoreDocument = gql`\n    mutation restore($code: String!, $email: String!) {\n  restore(code: $code, email: $email) {\n    errors {\n      field\n      message\n    }\n    user {\n      ...RegularUser\n    }\n  }\n}\n    ${RegularUserFragmentDoc}`;\nexport function useRestoreMutation() {\n  return Urql.useMutation(RestoreDocument);\n}\n;\nexport const GetClassroomDatesDocument = gql`\n    query GetClassroomDates {\n  classroomdates\n}\n    `;\nexport function useGetClassroomDatesQuery(options = {}) {\n  return Urql.useQuery(_objectSpread({\n    query: GetClassroomDatesDocument\n  }, options));\n}\n;\nexport const GetClassroomDocument = gql`\n    query getClassroom($id: ID!) {\n  classroom(id: $id) {\n    id\n    link\n    description\n    capacity\n    createdAt\n    updatedAt\n    enable\n    course {\n      id\n      name\n      price\n      language {\n        id\n        name\n        code\n      }\n    }\n    teacher {\n      id\n      user {\n        ...RegularUser\n      }\n    }\n  }\n}\n    ${RegularUserFragmentDoc}`;\nexport function useGetClassroomQuery(options = {}) {\n  return Urql.useQuery(_objectSpread({\n    query: GetClassroomDocument\n  }, options));\n}\n;\nexport const GetClassroomsByCourseDocument = gql`\n    query getClassroomsByCourse($id: ID!) {\n  classroomsByCourse(id: $id) {\n    id\n    description\n    capacity\n    link\n    createdAt\n    updatedAt\n    enable\n    course {\n      ...RegularCourse\n    }\n    teacher {\n      id\n      user {\n        ...RegularUser\n      }\n    }\n  }\n}\n    ${RegularCourseFragmentDoc}\n${RegularUserFragmentDoc}`;\nexport function useGetClassroomsByCourseQuery(options = {}) {\n  return Urql.useQuery(_objectSpread({\n    query: GetClassroomsByCourseDocument\n  }, options));\n}\n;\nexport const GetClassroomsDocument = gql`\n    query getClassrooms {\n  classrooms {\n    id\n    link\n    description\n    capacity\n    time_start\n    createdAt\n    updatedAt\n    enable\n    course {\n      id\n      name\n      price\n      language {\n        id\n        name\n        code\n      }\n    }\n    teacher {\n      id\n      user {\n        ...RegularUser\n      }\n    }\n  }\n}\n    ${RegularUserFragmentDoc}`;\nexport function useGetClassroomsQuery(options = {}) {\n  return Urql.useQuery(_objectSpread({\n    query: GetClassroomsDocument\n  }, options));\n}\n;\nexport const GetCoursesDocument = gql`\n    query getCourses {\n  courses {\n    id\n    name\n    price\n    active\n    createdAt\n    updatedAt\n    language {\n      id\n      name\n      code\n    }\n    classrooms {\n      id\n      description\n      teacher {\n        id\n        user {\n          id\n          name\n        }\n      }\n    }\n  }\n}\n    `;\nexport function useGetCoursesQuery(options = {}) {\n  return Urql.useQuery(_objectSpread({\n    query: GetCoursesDocument\n  }, options));\n}\n;\nexport const GetTeacherDocument = gql`\n    query getTeacher($id: ID!) {\n  teacher(id: $id) {\n    user {\n      id\n      name\n      email\n    }\n    classrooms {\n      id\n      link\n      description\n      capacity\n      course {\n        id\n        name\n        price\n        language {\n          id\n          name\n          code\n        }\n      }\n    }\n  }\n}\n    `;\nexport function useGetTeacherQuery(options = {}) {\n  return Urql.useQuery(_objectSpread({\n    query: GetTeacherDocument\n  }, options));\n}\n;\nexport const GetUserDocument = gql`\n    query getUser($id: ID!) {\n  user(id: $id) {\n    ...RegularUser\n  }\n}\n    ${RegularUserFragmentDoc}`;\nexport function useGetUserQuery(options = {}) {\n  return Urql.useQuery(_objectSpread({\n    query: GetUserDocument\n  }, options));\n}\n;\nexport const IsPaidDocument = gql`\n    query isPaid($id: ID!) {\n  isPaid(id: $id)\n}\n    `;\nexport function useIsPaidQuery(options = {}) {\n  return Urql.useQuery(_objectSpread({\n    query: IsPaidDocument\n  }, options));\n}\n;\nexport const MyCoursesDocument = gql`\n    query myCourses {\n  mycourses {\n    id\n    name\n    price\n    language {\n      id\n      name\n      code\n    }\n    classrooms {\n      id\n      link\n      description\n      capacity\n      teacher {\n        id\n        user {\n          id\n          name\n          email\n        }\n      }\n    }\n  }\n}\n    `;\nexport function useMyCoursesQuery(options = {}) {\n  return Urql.useQuery(_objectSpread({\n    query: MyCoursesDocument\n  }, options));\n}\n;\nexport const MyReceiptsDocument = gql`\n    query myReceipts {\n  myreceipts {\n    id\n    paid\n    amount\n    createdAt\n  }\n}\n    `;\nexport function useMyReceiptsQuery(options = {}) {\n  return Urql.useQuery(_objectSpread({\n    query: MyReceiptsDocument\n  }, options));\n}\n;\nexport const VerifyLoginDocument = gql`\n    query VerifyLogin {\n  verifyLogin {\n    ...RegularUser\n  }\n}\n    ${RegularUserFragmentDoc}`;\nexport function useVerifyLoginQuery(options = {}) {\n  return Urql.useQuery(_objectSpread({\n    query: VerifyLoginDocument\n  }, options));\n}\n;","map":{"version":3,"sources":["C:/Users/Usuario/Documents/Proyectos/apollo-academy/apollo-academy-web/generated/graphql.tsx"],"names":["gql","Urql","RegularUserFragmentDoc","RegularClassroomFragmentDoc","RegularCourseFragmentDoc","GetActivitiesDocument","useGetActivitiesMutation","useMutation","ChangeClassRoomStateDocument","useChangeClassRoomStateMutation","ChangeCourseStateDocument","useChangeCourseStateMutation","ChangePasswordDocument","useChangePasswordMutation","CreateCheckoutSessionDocument","useCreateCheckoutSessionMutation","GetcodeDocument","useGetcodeMutation","LoginDocument","useLoginMutation","LogoutDocument","useLogoutMutation","PayDocument","usePayMutation","ReceiptDocument","useReceiptMutation","RegisterDocument","useRegisterMutation","RestoreDocument","useRestoreMutation","GetClassroomDatesDocument","useGetClassroomDatesQuery","options","useQuery","query","GetClassroomDocument","useGetClassroomQuery","GetClassroomsByCourseDocument","useGetClassroomsByCourseQuery","GetClassroomsDocument","useGetClassroomsQuery","GetCoursesDocument","useGetCoursesQuery","GetTeacherDocument","useGetTeacherQuery","GetUserDocument","useGetUserQuery","IsPaidDocument","useIsPaidQuery","MyCoursesDocument","useMyCoursesQuery","MyReceiptsDocument","useMyReceiptsQuery","VerifyLoginDocument","useVerifyLoginQuery"],"mappings":";;;;;;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,OAAO,KAAKC,IAAZ,MAAsB,MAAtB;AAirBA,OAAO,MAAMC,sBAAsB,GAAGF,GAAI;AAC1C;AACA;AACA;AACA;AACA;AACA,KANO;AAOP,OAAO,MAAMG,2BAA2B,GAAGH,GAAI;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAME,sBAAuB,EAftB;AAgBP,OAAO,MAAME,wBAAwB,GAAGJ,GAAI;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAXO;AAYP,OAAO,MAAMK,qBAAqB,GAAGL,GAAI;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAdO;AAgBP,OAAO,SAASM,wBAAT,GAAoC;AACzC,SAAOL,IAAI,CAACM,WAAL,CAAwEF,qBAAxE,CAAP;AACD;AAAA;AACD,OAAO,MAAMG,4BAA4B,GAAGR,GAAI;AAChD;AACA;AACA;AACA,KAJO;AAMP,OAAO,SAASS,+BAAT,GAA2C;AAChD,SAAOR,IAAI,CAACM,WAAL,CAAsFC,4BAAtF,CAAP;AACD;AAAA;AACD,OAAO,MAAME,yBAAyB,GAAGV,GAAI;AAC7C;AACA;AACA;AACA,KAJO;AAMP,OAAO,SAASW,4BAAT,GAAwC;AAC7C,SAAOV,IAAI,CAACM,WAAL,CAAgFG,yBAAhF,CAAP;AACD;AAAA;AACD,OAAO,MAAME,sBAAsB,GAAGZ,GAAI;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAME,sBAAuB,EAZtB;AAcP,OAAO,SAASW,yBAAT,GAAqC;AAC1C,SAAOZ,IAAI,CAACM,WAAL,CAA0EK,sBAA1E,CAAP;AACD;AAAA;AACD,OAAO,MAAME,6BAA6B,GAAGd,GAAI;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAVO;AAYP,OAAO,SAASe,gCAAT,GAA4C;AACjD,SAAOd,IAAI,CAACM,WAAL,CAAwFO,6BAAxF,CAAP;AACD;AAAA;AACD,OAAO,MAAME,eAAe,GAAGhB,GAAI;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAME,sBAAuB,EAZtB;AAcP,OAAO,SAASe,kBAAT,GAA8B;AACnC,SAAOhB,IAAI,CAACM,WAAL,CAA4DS,eAA5D,CAAP;AACD;AAAA;AACD,OAAO,MAAME,aAAa,GAAGlB,GAAI;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAME,sBAAuB,EAZtB;AAcP,OAAO,SAASiB,gBAAT,GAA4B;AACjC,SAAOlB,IAAI,CAACM,WAAL,CAAwDW,aAAxD,CAAP;AACD;AAAA;AACD,OAAO,MAAME,cAAc,GAAGpB,GAAI;AAClC;AACA;AACA;AACA,KAJO;AAMP,OAAO,SAASqB,iBAAT,GAA6B;AAClC,SAAOpB,IAAI,CAACM,WAAL,CAA0Da,cAA1D,CAAP;AACD;AAAA;AACD,OAAO,MAAME,WAAW,GAAGtB,GAAI;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAbO;AAeP,OAAO,SAASuB,cAAT,GAA0B;AAC/B,SAAOtB,IAAI,CAACM,WAAL,CAAoDe,WAApD,CAAP;AACD;AAAA;AACD,OAAO,MAAME,eAAe,GAAGxB,GAAI;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAjCO;AAmCP,OAAO,SAASyB,kBAAT,GAA8B;AACnC,SAAOxB,IAAI,CAACM,WAAL,CAA4DiB,eAA5D,CAAP;AACD;AAAA;AACD,OAAO,MAAME,gBAAgB,GAAG1B,GAAI;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAME,sBAAuB,EAZtB;AAcP,OAAO,SAASyB,mBAAT,GAA+B;AACpC,SA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","sourcesContent":["import gql from 'graphql-tag';\nimport * as Urql from 'urql';\nexport type Maybe<T> = T | null;\nexport type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };\nexport type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };\nexport type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };\nexport type Omit<T, K extends keyof T> = Pick<T, Exclude<keyof T, K>>;\n/** All built-in and custom scalars, mapped to their actual values */\nexport type Scalars = {\n  ID: string;\n  String: string;\n  Boolean: boolean;\n  Int: number;\n  Float: number;\n  /** The javascript `Date` as string. Type represents date and time as the ISO Date string. */\n  DateTime: any;\n};\n\nexport type Query = {\n  __typename?: 'Query';\n  myreceipts: Array<Receipt>;\n  classrooms: Array<VirtualClassroom>;\n  classroomsByCourse: Array<VirtualClassroom>;\n  classroom: VirtualClassroom;\n  courses: Array<Course>;\n  mycourses: Array<Course>;\n  searchCourses: Array<Course>;\n  isPaid: Scalars['Boolean'];\n  teacher: Teacher;\n  verifyLogin?: Maybe<User>;\n  users: Array<User>;\n  user: User;\n  classroomdates: Array<Scalars['DateTime']>;\n};\n\n\nexport type QueryClassroomsByCourseArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type QueryClassroomArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type QuerySearchCoursesArgs = {\n  query: Scalars['String'];\n};\n\n\nexport type QueryIsPaidArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type QueryTeacherArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type QueryUserArgs = {\n  id: Scalars['ID'];\n};\n\nexport type Receipt = {\n  __typename?: 'Receipt';\n  id: Scalars['ID'];\n  virtual?: Maybe<VirtualClassroom>;\n  key: Scalars['String'];\n  amount?: Maybe<Scalars['Float']>;\n  paid: Scalars['Boolean'];\n  user: User;\n  createdAt: Scalars['String'];\n};\n\nexport type VirtualClassroom = {\n  __typename?: 'VirtualClassroom';\n  id: Scalars['ID'];\n  description: Scalars['String'];\n  teacher: Teacher;\n  course: Course;\n  time_start: Scalars['String'];\n  repeat: Scalars['Int'];\n  capacity: Scalars['Int'];\n  link: Scalars['String'];\n  enable: Scalars['Boolean'];\n  createdAt: Scalars['String'];\n  updatedAt: Scalars['String'];\n};\n\nexport type Teacher = {\n  __typename?: 'Teacher';\n  id: Scalars['ID'];\n  user: User;\n  classrooms: Array<VirtualClassroom>;\n};\n\nexport type User = {\n  __typename?: 'User';\n  id: Scalars['ID'];\n  oauth: Oauth;\n  name: Scalars['String'];\n  email?: Maybe<Scalars['String']>;\n  createdAt: Scalars['String'];\n  updatedAt: Scalars['String'];\n};\n\nexport type Oauth = {\n  __typename?: 'Oauth';\n  id: Scalars['ID'];\n  user: User;\n  remote_id: Scalars['String'];\n  active: Scalars['Boolean'];\n};\n\nexport type Course = {\n  __typename?: 'Course';\n  id?: Maybe<Scalars['ID']>;\n  language: Language;\n  classrooms: Array<VirtualClassroom>;\n  name: Scalars['String'];\n  price: Scalars['Float'];\n  active: Scalars['Boolean'];\n  createdAt: Scalars['String'];\n  updatedAt: Scalars['String'];\n};\n\nexport type Language = {\n  __typename?: 'Language';\n  id: Scalars['ID'];\n  name: Scalars['String'];\n  code: Scalars['String'];\n  active?: Maybe<Scalars['Boolean']>;\n};\n\n\nexport type Mutation = {\n  __typename?: 'Mutation';\n  receipt: Receipt;\n  changeClassRoomState: Scalars['Boolean'];\n  course: Course;\n  changeCourseState: Scalars['Boolean'];\n  getPayments: CResponse;\n  createCheckout: CResponse;\n  pay: CResponse;\n  getCode: CResponse;\n  restore: CResponse;\n  changePassword: CResponse;\n  register: CResponse;\n  login: CResponse;\n  logout: Scalars['Boolean'];\n  activities: Array<VirtualClassroom>;\n};\n\n\nexport type MutationReceiptArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type MutationChangeClassRoomStateArgs = {\n  newState: Scalars['Boolean'];\n  id: Scalars['ID'];\n};\n\n\nexport type MutationCourseArgs = {\n  id: Scalars['Int'];\n};\n\n\nexport type MutationChangeCourseStateArgs = {\n  newState: Scalars['Boolean'];\n  id: Scalars['ID'];\n};\n\n\nexport type MutationCreateCheckoutArgs = {\n  classroom: Scalars['ID'];\n};\n\n\nexport type MutationPayArgs = {\n  key: Scalars['String'];\n  classroom: Scalars['ID'];\n};\n\n\nexport type MutationGetCodeArgs = {\n  email: Scalars['String'];\n};\n\n\nexport type MutationRestoreArgs = {\n  email: Scalars['String'];\n  code: Scalars['String'];\n};\n\n\nexport type MutationChangePasswordArgs = {\n  password: Scalars['String'];\n  email: Scalars['String'];\n};\n\n\nexport type MutationRegisterArgs = {\n  password: Scalars['String'];\n  email: Scalars['String'];\n  name: Scalars['String'];\n};\n\n\nexport type MutationLoginArgs = {\n  password: Scalars['String'];\n  email: Scalars['String'];\n};\n\n\nexport type MutationActivitiesArgs = {\n  date: Scalars['DateTime'];\n};\n\nexport type CResponse = {\n  __typename?: 'CResponse';\n  errors?: Maybe<Array<ErrorField>>;\n  user?: Maybe<User>;\n  stripeID?: Maybe<Scalars['String']>;\n  receipt?: Maybe<Receipt>;\n};\n\nexport type ErrorField = {\n  __typename?: 'ErrorField';\n  field: Scalars['String'];\n  message: Scalars['String'];\n};\n\nexport type RegularClassroomFragment = (\n  { __typename?: 'VirtualClassroom' }\n  & Pick<VirtualClassroom, 'id' | 'capacity' | 'link' | 'createdAt' | 'updatedAt' | 'enable'>\n  & { teacher: (\n    { __typename?: 'Teacher' }\n    & Pick<Teacher, 'id'>\n    & { user: (\n      { __typename?: 'User' }\n      & RegularUserFragment\n    ) }\n  ) }\n);\n\nexport type RegularCourseFragment = (\n  { __typename?: 'Course' }\n  & Pick<Course, 'id' | 'name' | 'price'>\n  & { language: (\n    { __typename?: 'Language' }\n    & Pick<Language, 'id' | 'name' | 'code'>\n  ) }\n);\n\nexport type RegularUserFragment = (\n  { __typename?: 'User' }\n  & Pick<User, 'id' | 'name' | 'email'>\n);\n\nexport type GetActivitiesMutationVariables = Exact<{\n  date: Scalars['DateTime'];\n}>;\n\n\nexport type GetActivitiesMutation = (\n  { __typename?: 'Mutation' }\n  & { activities: Array<(\n    { __typename?: 'VirtualClassroom' }\n    & Pick<VirtualClassroom, 'id' | 'link' | 'description' | 'capacity' | 'time_start'>\n    & { course: (\n      { __typename?: 'Course' }\n      & Pick<Course, 'id' | 'name'>\n    ) }\n  )> }\n);\n\nexport type ChangeClassRoomStateMutationVariables = Exact<{\n  id: Scalars['ID'];\n  state: Scalars['Boolean'];\n}>;\n\n\nexport type ChangeClassRoomStateMutation = (\n  { __typename?: 'Mutation' }\n  & Pick<Mutation, 'changeClassRoomState'>\n);\n\nexport type ChangeCourseStateMutationVariables = Exact<{\n  id: Scalars['ID'];\n  state: Scalars['Boolean'];\n}>;\n\n\nexport type ChangeCourseStateMutation = (\n  { __typename?: 'Mutation' }\n  & Pick<Mutation, 'changeCourseState'>\n);\n\nexport type ChangePasswordMutationVariables = Exact<{\n  password: Scalars['String'];\n  email: Scalars['String'];\n}>;\n\n\nexport type ChangePasswordMutation = (\n  { __typename?: 'Mutation' }\n  & { changePassword: (\n    { __typename?: 'CResponse' }\n    & { errors?: Maybe<Array<(\n      { __typename?: 'ErrorField' }\n      & Pick<ErrorField, 'field' | 'message'>\n    )>>, user?: Maybe<(\n      { __typename?: 'User' }\n      & RegularUserFragment\n    )> }\n  ) }\n);\n\nexport type CreateCheckoutSessionMutationVariables = Exact<{\n  id: Scalars['ID'];\n}>;\n\n\nexport type CreateCheckoutSessionMutation = (\n  { __typename?: 'Mutation' }\n  & { createCheckout: (\n    { __typename?: 'CResponse' }\n    & Pick<CResponse, 'stripeID'>\n    & { errors?: Maybe<Array<(\n      { __typename?: 'ErrorField' }\n      & Pick<ErrorField, 'field' | 'message'>\n    )>> }\n  ) }\n);\n\nexport type GetcodeMutationVariables = Exact<{\n  email: Scalars['String'];\n}>;\n\n\nexport type GetcodeMutation = (\n  { __typename?: 'Mutation' }\n  & { getCode: (\n    { __typename?: 'CResponse' }\n    & { errors?: Maybe<Array<(\n      { __typename?: 'ErrorField' }\n      & Pick<ErrorField, 'field' | 'message'>\n    )>>, user?: Maybe<(\n      { __typename?: 'User' }\n      & RegularUserFragment\n    )> }\n  ) }\n);\n\nexport type LoginMutationVariables = Exact<{\n  email: Scalars['String'];\n  password: Scalars['String'];\n}>;\n\n\nexport type LoginMutation = (\n  { __typename?: 'Mutation' }\n  & { login: (\n    { __typename?: 'CResponse' }\n    & { errors?: Maybe<Array<(\n      { __typename?: 'ErrorField' }\n      & Pick<ErrorField, 'field' | 'message'>\n    )>>, user?: Maybe<(\n      { __typename?: 'User' }\n      & RegularUserFragment\n    )> }\n  ) }\n);\n\nexport type LogoutMutationVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type LogoutMutation = (\n  { __typename?: 'Mutation' }\n  & Pick<Mutation, 'logout'>\n);\n\nexport type PayMutationVariables = Exact<{\n  id: Scalars['ID'];\n  key: Scalars['String'];\n}>;\n\n\nexport type PayMutation = (\n  { __typename?: 'Mutation' }\n  & { pay: (\n    { __typename?: 'CResponse' }\n    & { errors?: Maybe<Array<(\n      { __typename?: 'ErrorField' }\n      & Pick<ErrorField, 'field' | 'message'>\n    )>>, receipt?: Maybe<(\n      { __typename?: 'Receipt' }\n      & Pick<Receipt, 'id' | 'amount'>\n    )> }\n  ) }\n);\n\nexport type ReceiptMutationVariables = Exact<{\n  id: Scalars['ID'];\n}>;\n\n\nexport type ReceiptMutation = (\n  { __typename?: 'Mutation' }\n  & { receipt: (\n    { __typename?: 'Receipt' }\n    & Pick<Receipt, 'id' | 'paid' | 'amount' | 'createdAt'>\n    & { virtual?: Maybe<(\n      { __typename?: 'VirtualClassroom' }\n      & Pick<VirtualClassroom, 'id' | 'description' | 'capacity' | 'enable'>\n      & { teacher: (\n        { __typename?: 'Teacher' }\n        & Pick<Teacher, 'id'>\n        & { user: (\n          { __typename?: 'User' }\n          & Pick<User, 'id' | 'name' | 'email'>\n        ) }\n      ), course: (\n        { __typename?: 'Course' }\n        & Pick<Course, 'id' | 'name' | 'createdAt' | 'updatedAt'>\n        & { language: (\n          { __typename?: 'Language' }\n          & Pick<Language, 'id' | 'name'>\n        ) }\n      ) }\n    )> }\n  ) }\n);\n\nexport type RegisterMutationVariables = Exact<{\n  name: Scalars['String'];\n  email: Scalars['String'];\n  password: Scalars['String'];\n}>;\n\n\nexport type RegisterMutation = (\n  { __typename?: 'Mutation' }\n  & { register: (\n    { __typename?: 'CResponse' }\n    & { errors?: Maybe<Array<(\n      { __typename?: 'ErrorField' }\n      & Pick<ErrorField, 'field' | 'message'>\n    )>>, user?: Maybe<(\n      { __typename?: 'User' }\n      & RegularUserFragment\n    )> }\n  ) }\n);\n\nexport type RestoreMutationVariables = Exact<{\n  code: Scalars['String'];\n  email: Scalars['String'];\n}>;\n\n\nexport type RestoreMutation = (\n  { __typename?: 'Mutation' }\n  & { restore: (\n    { __typename?: 'CResponse' }\n    & { errors?: Maybe<Array<(\n      { __typename?: 'ErrorField' }\n      & Pick<ErrorField, 'field' | 'message'>\n    )>>, user?: Maybe<(\n      { __typename?: 'User' }\n      & RegularUserFragment\n    )> }\n  ) }\n);\n\nexport type GetClassroomDatesQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type GetClassroomDatesQuery = (\n  { __typename?: 'Query' }\n  & Pick<Query, 'classroomdates'>\n);\n\nexport type GetClassroomQueryVariables = Exact<{\n  id: Scalars['ID'];\n}>;\n\n\nexport type GetClassroomQuery = (\n  { __typename?: 'Query' }\n  & { classroom: (\n    { __typename?: 'VirtualClassroom' }\n    & Pick<VirtualClassroom, 'id' | 'link' | 'description' | 'capacity' | 'createdAt' | 'updatedAt' | 'enable'>\n    & { course: (\n      { __typename?: 'Course' }\n      & Pick<Course, 'id' | 'name' | 'price'>\n      & { language: (\n        { __typename?: 'Language' }\n        & Pick<Language, 'id' | 'name' | 'code'>\n      ) }\n    ), teacher: (\n      { __typename?: 'Teacher' }\n      & Pick<Teacher, 'id'>\n      & { user: (\n        { __typename?: 'User' }\n        & RegularUserFragment\n      ) }\n    ) }\n  ) }\n);\n\nexport type GetClassroomsByCourseQueryVariables = Exact<{\n  id: Scalars['ID'];\n}>;\n\n\nexport type GetClassroomsByCourseQuery = (\n  { __typename?: 'Query' }\n  & { classroomsByCourse: Array<(\n    { __typename?: 'VirtualClassroom' }\n    & Pick<VirtualClassroom, 'id' | 'description' | 'capacity' | 'link' | 'createdAt' | 'updatedAt' | 'enable'>\n    & { course: (\n      { __typename?: 'Course' }\n      & RegularCourseFragment\n    ), teacher: (\n      { __typename?: 'Teacher' }\n      & Pick<Teacher, 'id'>\n      & { user: (\n        { __typename?: 'User' }\n        & RegularUserFragment\n      ) }\n    ) }\n  )> }\n);\n\nexport type GetClassroomsQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type GetClassroomsQuery = (\n  { __typename?: 'Query' }\n  & { classrooms: Array<(\n    { __typename?: 'VirtualClassroom' }\n    & Pick<VirtualClassroom, 'id' | 'link' | 'description' | 'capacity' | 'time_start' | 'createdAt' | 'updatedAt' | 'enable'>\n    & { course: (\n      { __typename?: 'Course' }\n      & Pick<Course, 'id' | 'name' | 'price'>\n      & { language: (\n        { __typename?: 'Language' }\n        & Pick<Language, 'id' | 'name' | 'code'>\n      ) }\n    ), teacher: (\n      { __typename?: 'Teacher' }\n      & Pick<Teacher, 'id'>\n      & { user: (\n        { __typename?: 'User' }\n        & RegularUserFragment\n      ) }\n    ) }\n  )> }\n);\n\nexport type GetCoursesQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type GetCoursesQuery = (\n  { __typename?: 'Query' }\n  & { courses: Array<(\n    { __typename?: 'Course' }\n    & Pick<Course, 'id' | 'name' | 'price' | 'active' | 'createdAt' | 'updatedAt'>\n    & { language: (\n      { __typename?: 'Language' }\n      & Pick<Language, 'id' | 'name' | 'code'>\n    ), classrooms: Array<(\n      { __typename?: 'VirtualClassroom' }\n      & Pick<VirtualClassroom, 'id' | 'description'>\n      & { teacher: (\n        { __typename?: 'Teacher' }\n        & Pick<Teacher, 'id'>\n        & { user: (\n          { __typename?: 'User' }\n          & Pick<User, 'id' | 'name'>\n        ) }\n      ) }\n    )> }\n  )> }\n);\n\nexport type GetTeacherQueryVariables = Exact<{\n  id: Scalars['ID'];\n}>;\n\n\nexport type GetTeacherQuery = (\n  { __typename?: 'Query' }\n  & { teacher: (\n    { __typename?: 'Teacher' }\n    & { user: (\n      { __typename?: 'User' }\n      & Pick<User, 'id' | 'name' | 'email'>\n    ), classrooms: Array<(\n      { __typename?: 'VirtualClassroom' }\n      & Pick<VirtualClassroom, 'id' | 'link' | 'description' | 'capacity'>\n      & { course: (\n        { __typename?: 'Course' }\n        & Pick<Course, 'id' | 'name' | 'price'>\n        & { language: (\n          { __typename?: 'Language' }\n          & Pick<Language, 'id' | 'name' | 'code'>\n        ) }\n      ) }\n    )> }\n  ) }\n);\n\nexport type GetUserQueryVariables = Exact<{\n  id: Scalars['ID'];\n}>;\n\n\nexport type GetUserQuery = (\n  { __typename?: 'Query' }\n  & { user: (\n    { __typename?: 'User' }\n    & RegularUserFragment\n  ) }\n);\n\nexport type IsPaidQueryVariables = Exact<{\n  id: Scalars['ID'];\n}>;\n\n\nexport type IsPaidQuery = (\n  { __typename?: 'Query' }\n  & Pick<Query, 'isPaid'>\n);\n\nexport type MyCoursesQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type MyCoursesQuery = (\n  { __typename?: 'Query' }\n  & { mycourses: Array<(\n    { __typename?: 'Course' }\n    & Pick<Course, 'id' | 'name' | 'price'>\n    & { language: (\n      { __typename?: 'Language' }\n      & Pick<Language, 'id' | 'name' | 'code'>\n    ), classrooms: Array<(\n      { __typename?: 'VirtualClassroom' }\n      & Pick<VirtualClassroom, 'id' | 'link' | 'description' | 'capacity'>\n      & { teacher: (\n        { __typename?: 'Teacher' }\n        & Pick<Teacher, 'id'>\n        & { user: (\n          { __typename?: 'User' }\n          & Pick<User, 'id' | 'name' | 'email'>\n        ) }\n      ) }\n    )> }\n  )> }\n);\n\nexport type MyReceiptsQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type MyReceiptsQuery = (\n  { __typename?: 'Query' }\n  & { myreceipts: Array<(\n    { __typename?: 'Receipt' }\n    & Pick<Receipt, 'id' | 'paid' | 'amount' | 'createdAt'>\n  )> }\n);\n\nexport type VerifyLoginQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type VerifyLoginQuery = (\n  { __typename?: 'Query' }\n  & { verifyLogin?: Maybe<(\n    { __typename?: 'User' }\n    & RegularUserFragment\n  )> }\n);\n\nexport const RegularUserFragmentDoc = gql`\n    fragment RegularUser on User {\n  id\n  name\n  email\n}\n    `;\nexport const RegularClassroomFragmentDoc = gql`\n    fragment RegularClassroom on VirtualClassroom {\n  id\n  teacher {\n    id\n    user {\n      ...RegularUser\n    }\n  }\n  capacity\n  link\n  createdAt\n  updatedAt\n  enable\n}\n    ${RegularUserFragmentDoc}`;\nexport const RegularCourseFragmentDoc = gql`\n    fragment RegularCourse on Course {\n  id\n  name\n  price\n  language {\n    id\n    name\n    code\n  }\n}\n    `;\nexport const GetActivitiesDocument = gql`\n    mutation GetActivities($date: DateTime!) {\n  activities(date: $date) {\n    id\n    link\n    description\n    capacity\n    time_start\n    course {\n      id\n      name\n    }\n  }\n}\n    `;\n\nexport function useGetActivitiesMutation() {\n  return Urql.useMutation<GetActivitiesMutation, GetActivitiesMutationVariables>(GetActivitiesDocument);\n};\nexport const ChangeClassRoomStateDocument = gql`\n    mutation changeClassRoomState($id: ID!, $state: Boolean!) {\n  changeClassRoomState(id: $id, newState: $state)\n}\n    `;\n\nexport function useChangeClassRoomStateMutation() {\n  return Urql.useMutation<ChangeClassRoomStateMutation, ChangeClassRoomStateMutationVariables>(ChangeClassRoomStateDocument);\n};\nexport const ChangeCourseStateDocument = gql`\n    mutation changeCourseState($id: ID!, $state: Boolean!) {\n  changeCourseState(id: $id, newState: $state)\n}\n    `;\n\nexport function useChangeCourseStateMutation() {\n  return Urql.useMutation<ChangeCourseStateMutation, ChangeCourseStateMutationVariables>(ChangeCourseStateDocument);\n};\nexport const ChangePasswordDocument = gql`\n    mutation changePassword($password: String!, $email: String!) {\n  changePassword(password: $password, email: $email) {\n    errors {\n      field\n      message\n    }\n    user {\n      ...RegularUser\n    }\n  }\n}\n    ${RegularUserFragmentDoc}`;\n\nexport function useChangePasswordMutation() {\n  return Urql.useMutation<ChangePasswordMutation, ChangePasswordMutationVariables>(ChangePasswordDocument);\n};\nexport const CreateCheckoutSessionDocument = gql`\n    mutation createCheckoutSession($id: ID!) {\n  createCheckout(classroom: $id) {\n    errors {\n      field\n      message\n    }\n    stripeID\n  }\n}\n    `;\n\nexport function useCreateCheckoutSessionMutation() {\n  return Urql.useMutation<CreateCheckoutSessionMutation, CreateCheckoutSessionMutationVariables>(CreateCheckoutSessionDocument);\n};\nexport const GetcodeDocument = gql`\n    mutation getcode($email: String!) {\n  getCode(email: $email) {\n    errors {\n      field\n      message\n    }\n    user {\n      ...RegularUser\n    }\n  }\n}\n    ${RegularUserFragmentDoc}`;\n\nexport function useGetcodeMutation() {\n  return Urql.useMutation<GetcodeMutation, GetcodeMutationVariables>(GetcodeDocument);\n};\nexport const LoginDocument = gql`\n    mutation Login($email: String!, $password: String!) {\n  login(password: $password, email: $email) {\n    errors {\n      field\n      message\n    }\n    user {\n      ...RegularUser\n    }\n  }\n}\n    ${RegularUserFragmentDoc}`;\n\nexport function useLoginMutation() {\n  return Urql.useMutation<LoginMutation, LoginMutationVariables>(LoginDocument);\n};\nexport const LogoutDocument = gql`\n    mutation logout {\n  logout\n}\n    `;\n\nexport function useLogoutMutation() {\n  return Urql.useMutation<LogoutMutation, LogoutMutationVariables>(LogoutDocument);\n};\nexport const PayDocument = gql`\n    mutation pay($id: ID!, $key: String!) {\n  pay(classroom: $id, key: $key) {\n    errors {\n      field\n      message\n    }\n    receipt {\n      id\n      amount\n    }\n  }\n}\n    `;\n\nexport function usePayMutation() {\n  return Urql.useMutation<PayMutation, PayMutationVariables>(PayDocument);\n};\nexport const ReceiptDocument = gql`\n    mutation Receipt($id: ID!) {\n  receipt(id: $id) {\n    id\n    paid\n    amount\n    createdAt\n    virtual {\n      id\n      description\n      capacity\n      enable\n      teacher {\n        id\n        user {\n          id\n          name\n          email\n        }\n      }\n      course {\n        id\n        name\n        createdAt\n        updatedAt\n        language {\n          id\n          name\n        }\n      }\n    }\n  }\n}\n    `;\n\nexport function useReceiptMutation() {\n  return Urql.useMutation<ReceiptMutation, ReceiptMutationVariables>(ReceiptDocument);\n};\nexport const RegisterDocument = gql`\n    mutation Register($name: String!, $email: String!, $password: String!) {\n  register(name: $name, email: $email, password: $password) {\n    errors {\n      field\n      message\n    }\n    user {\n      ...RegularUser\n    }\n  }\n}\n    ${RegularUserFragmentDoc}`;\n\nexport function useRegisterMutation() {\n  return Urql.useMutation<RegisterMutation, RegisterMutationVariables>(RegisterDocument);\n};\nexport const RestoreDocument = gql`\n    mutation restore($code: String!, $email: String!) {\n  restore(code: $code, email: $email) {\n    errors {\n      field\n      message\n    }\n    user {\n      ...RegularUser\n    }\n  }\n}\n    ${RegularUserFragmentDoc}`;\n\nexport function useRestoreMutation() {\n  return Urql.useMutation<RestoreMutation, RestoreMutationVariables>(RestoreDocument);\n};\nexport const GetClassroomDatesDocument = gql`\n    query GetClassroomDates {\n  classroomdates\n}\n    `;\n\nexport function useGetClassroomDatesQuery(options: Omit<Urql.UseQueryArgs<GetClassroomDatesQueryVariables>, 'query'> = {}) {\n  return Urql.useQuery<GetClassroomDatesQuery>({ query: GetClassroomDatesDocument, ...options });\n};\nexport const GetClassroomDocument = gql`\n    query getClassroom($id: ID!) {\n  classroom(id: $id) {\n    id\n    link\n    description\n    capacity\n    createdAt\n    updatedAt\n    enable\n    course {\n      id\n      name\n      price\n      language {\n        id\n        name\n        code\n      }\n    }\n    teacher {\n      id\n      user {\n        ...RegularUser\n      }\n    }\n  }\n}\n    ${RegularUserFragmentDoc}`;\n\nexport function useGetClassroomQuery(options: Omit<Urql.UseQueryArgs<GetClassroomQueryVariables>, 'query'> = {}) {\n  return Urql.useQuery<GetClassroomQuery>({ query: GetClassroomDocument, ...options });\n};\nexport const GetClassroomsByCourseDocument = gql`\n    query getClassroomsByCourse($id: ID!) {\n  classroomsByCourse(id: $id) {\n    id\n    description\n    capacity\n    link\n    createdAt\n    updatedAt\n    enable\n    course {\n      ...RegularCourse\n    }\n    teacher {\n      id\n      user {\n        ...RegularUser\n      }\n    }\n  }\n}\n    ${RegularCourseFragmentDoc}\n${RegularUserFragmentDoc}`;\n\nexport function useGetClassroomsByCourseQuery(options: Omit<Urql.UseQueryArgs<GetClassroomsByCourseQueryVariables>, 'query'> = {}) {\n  return Urql.useQuery<GetClassroomsByCourseQuery>({ query: GetClassroomsByCourseDocument, ...options });\n};\nexport const GetClassroomsDocument = gql`\n    query getClassrooms {\n  classrooms {\n    id\n    link\n    description\n    capacity\n    time_start\n    createdAt\n    updatedAt\n    enable\n    course {\n      id\n      name\n      price\n      language {\n        id\n        name\n        code\n      }\n    }\n    teacher {\n      id\n      user {\n        ...RegularUser\n      }\n    }\n  }\n}\n    ${RegularUserFragmentDoc}`;\n\nexport function useGetClassroomsQuery(options: Omit<Urql.UseQueryArgs<GetClassroomsQueryVariables>, 'query'> = {}) {\n  return Urql.useQuery<GetClassroomsQuery>({ query: GetClassroomsDocument, ...options });\n};\nexport const GetCoursesDocument = gql`\n    query getCourses {\n  courses {\n    id\n    name\n    price\n    active\n    createdAt\n    updatedAt\n    language {\n      id\n      name\n      code\n    }\n    classrooms {\n      id\n      description\n      teacher {\n        id\n        user {\n          id\n          name\n        }\n      }\n    }\n  }\n}\n    `;\n\nexport function useGetCoursesQuery(options: Omit<Urql.UseQueryArgs<GetCoursesQueryVariables>, 'query'> = {}) {\n  return Urql.useQuery<GetCoursesQuery>({ query: GetCoursesDocument, ...options });\n};\nexport const GetTeacherDocument = gql`\n    query getTeacher($id: ID!) {\n  teacher(id: $id) {\n    user {\n      id\n      name\n      email\n    }\n    classrooms {\n      id\n      link\n      description\n      capacity\n      course {\n        id\n        name\n        price\n        language {\n          id\n          name\n          code\n        }\n      }\n    }\n  }\n}\n    `;\n\nexport function useGetTeacherQuery(options: Omit<Urql.UseQueryArgs<GetTeacherQueryVariables>, 'query'> = {}) {\n  return Urql.useQuery<GetTeacherQuery>({ query: GetTeacherDocument, ...options });\n};\nexport const GetUserDocument = gql`\n    query getUser($id: ID!) {\n  user(id: $id) {\n    ...RegularUser\n  }\n}\n    ${RegularUserFragmentDoc}`;\n\nexport function useGetUserQuery(options: Omit<Urql.UseQueryArgs<GetUserQueryVariables>, 'query'> = {}) {\n  return Urql.useQuery<GetUserQuery>({ query: GetUserDocument, ...options });\n};\nexport const IsPaidDocument = gql`\n    query isPaid($id: ID!) {\n  isPaid(id: $id)\n}\n    `;\n\nexport function useIsPaidQuery(options: Omit<Urql.UseQueryArgs<IsPaidQueryVariables>, 'query'> = {}) {\n  return Urql.useQuery<IsPaidQuery>({ query: IsPaidDocument, ...options });\n};\nexport const MyCoursesDocument = gql`\n    query myCourses {\n  mycourses {\n    id\n    name\n    price\n    language {\n      id\n      name\n      code\n    }\n    classrooms {\n      id\n      link\n      description\n      capacity\n      teacher {\n        id\n        user {\n          id\n          name\n          email\n        }\n      }\n    }\n  }\n}\n    `;\n\nexport function useMyCoursesQuery(options: Omit<Urql.UseQueryArgs<MyCoursesQueryVariables>, 'query'> = {}) {\n  return Urql.useQuery<MyCoursesQuery>({ query: MyCoursesDocument, ...options });\n};\nexport const MyReceiptsDocument = gql`\n    query myReceipts {\n  myreceipts {\n    id\n    paid\n    amount\n    createdAt\n  }\n}\n    `;\n\nexport function useMyReceiptsQuery(options: Omit<Urql.UseQueryArgs<MyReceiptsQueryVariables>, 'query'> = {}) {\n  return Urql.useQuery<MyReceiptsQuery>({ query: MyReceiptsDocument, ...options });\n};\nexport const VerifyLoginDocument = gql`\n    query VerifyLogin {\n  verifyLogin {\n    ...RegularUser\n  }\n}\n    ${RegularUserFragmentDoc}`;\n\nexport function useVerifyLoginQuery(options: Omit<Urql.UseQueryArgs<VerifyLoginQueryVariables>, 'query'> = {}) {\n  return Urql.useQuery<VerifyLoginQuery>({ query: VerifyLoginDocument, ...options });\n};"]},"metadata":{},"sourceType":"module"}