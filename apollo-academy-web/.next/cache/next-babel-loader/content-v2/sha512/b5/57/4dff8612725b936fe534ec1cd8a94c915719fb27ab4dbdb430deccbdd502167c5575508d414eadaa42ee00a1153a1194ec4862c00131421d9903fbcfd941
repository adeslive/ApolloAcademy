{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport _regeneratorRuntime from \"C:/Users/Usuario/Documents/Proyectos/apollo-academy/apollo-academy-web/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport _asyncToGenerator from \"C:/Users/Usuario/Documents/Proyectos/apollo-academy/apollo-academy-web/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:/Users/Usuario/Documents/Proyectos/apollo-academy/apollo-academy-web/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { Box, Flex, Heading, Link, SimpleGrid, Square, Text } from '@chakra-ui/layout';\nimport { Avatar, Grid, GridItem, Stack } from '@chakra-ui/react';\nimport { withUrqlClient } from 'next-urql';\nimport NextLink from \"next/link\";\nimport { useRouter } from 'next/router';\nimport React, { useState } from \"react\";\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\nimport { Header } from \"../../components/Header\";\nimport Layout from \"../../components/Layout\";\nimport { useGetActivitiesMutation, useGetClassroomDatesQuery, useMyCoursesQuery } from '../../generated/graphql';\nimport { urqlClient } from \"../../utils/urqlClient\";\n\nvar Cursos = function Cursos() {\n  var router = useRouter();\n\n  var _useState = useState(1),\n      page = _useState[0],\n      setPage = _useState[1];\n\n  var _useState2 = useState(new Date()),\n      value = _useState2[0],\n      onChange = _useState2[1];\n\n  var _useState3 = useState(null),\n      activities = _useState3[0],\n      changeActivities = _useState3[1];\n\n  var _useGetActivitiesMuta = useGetActivitiesMutation(),\n      _useGetActivitiesMuta2 = _slicedToArray(_useGetActivitiesMuta, 2),\n      getActivities = _useGetActivitiesMuta2[1];\n\n  var getCurrentActivities = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(date) {\n      var temp;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return getActivities({\n                date: date\n              });\n\n            case 2:\n              temp = _context.sent;\n\n              if (temp.data && temp.data.activities) {\n                changeActivities( /*#__PURE__*/_jsx(Box, {\n                  children: temp.data.activities.map(function (value, index) {\n                    return /*#__PURE__*/_jsxs(Box, {\n                      bgColor: \"gray.100\",\n                      p: \"2\",\n                      onClick: function onClick() {\n                        return router.push('/course/' + value.id);\n                      },\n                      cursor: \"pointer\",\n                      _hover: {\n                        backgroundColor: \"blue.600\",\n                        textColor: \"white\"\n                      },\n                      children: [/*#__PURE__*/_jsxs(Text, {\n                        noOfLines: 1,\n                        isTruncated: true,\n                        children: [\"Curso: \", value.course.name]\n                      }), /*#__PURE__*/_jsx(Text, {\n                        children: new Date(parseInt(value.time_start)).toLocaleTimeString()\n                      })]\n                    });\n                  })\n                }));\n              }\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function getCurrentActivities(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var classrooms = null;\n  var calendar = null;\n\n  var _useMyCoursesQuery = useMyCoursesQuery(),\n      _useMyCoursesQuery2 = _slicedToArray(_useMyCoursesQuery, 1),\n      courses = _useMyCoursesQuery2[0];\n\n  var _useGetClassroomDates = useGetClassroomDatesQuery(),\n      _useGetClassroomDates2 = _slicedToArray(_useGetClassroomDates, 1),\n      dates = _useGetClassroomDates2[0];\n\n  if (dates.fetching) {} else if (!dates.data || !dates.data.classroomdates) {} else {\n    var calendarDates = [];\n    dates.data.classroomdates.forEach(function (value, index) {\n      calendarDates.push(new Date(value));\n    });\n    calendar = /*#__PURE__*/_jsx(Calendar, {\n      activeStartDate: value,\n      onChange: getCurrentActivities,\n      tileContent: function tileContent(_ref2) {\n        var activeStartDate = _ref2.activeStartDate,\n            date = _ref2.date,\n            view = _ref2.view;\n        if (calendarDates.find(function (value) {\n          return value.getFullYear() + '-' + (value.getMonth() + 1) + '-' + value.getDate() === date.getFullYear() + '-' + (date.getMonth() + 1) + '-' + date.getDate();\n        })) return /*#__PURE__*/_jsx(Square, {\n          h: \"50%\",\n          w: \"25%\",\n          bgColor: \"red\"\n        });\n      }\n    });\n  }\n\n  if (courses.fetching) {} else if (!courses.data || !courses.data.mycourses) {} else {\n    classrooms = /*#__PURE__*/_jsx(SimpleGrid, {\n      columns: 2,\n      mt: \"2rem\",\n      spacing: \"2rem\",\n      px: \"1rem\",\n      children: courses.data.mycourses.map(function (value, mapIndex) {\n        return /*#__PURE__*/_jsxs(Flex, {\n          border: \"1px\",\n          borderColor: \"gray.100\",\n          w: '14rem',\n          rounded: \"lg\",\n          bg: \"white\",\n          shadow: \"md\",\n          children: [/*#__PURE__*/_jsx(Square, {\n            bg: \"indigo\",\n            w: \"10%\"\n          }), /*#__PURE__*/_jsxs(Box, {\n            p: \"2rem\",\n            children: [/*#__PURE__*/_jsxs(Text, {\n              ml: \"auto\",\n              as: \"sup\",\n              children: [\"#\", value.classrooms[0].id]\n            }), /*#__PURE__*/_jsx(NextLink, {\n              href: \"/course/\" + value.classrooms[0].id,\n              children: /*#__PURE__*/_jsx(Link, {\n                children: /*#__PURE__*/_jsx(Heading, {\n                  as: \"h3\",\n                  size: \"sm\",\n                  children: value.name\n                })\n              })\n            }), /*#__PURE__*/_jsx(Text, {\n              as: \"sub\",\n              children: value.name\n            })]\n          }), value.classrooms[0].teacher && /*#__PURE__*/_jsx(NextLink, {\n            href: \"/teacher/\" + value.classrooms[0].teacher.id,\n            children: /*#__PURE__*/_jsx(Avatar, {\n              name: value.classrooms[0].teacher.user.name,\n              mt: \"2rem\",\n              mr: \"2em\"\n            })\n          })]\n        });\n      })\n    });\n  }\n\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(Header, {}), /*#__PURE__*/_jsx(Layout, {\n      size: \"big\",\n      children: /*#__PURE__*/_jsx(SimpleGrid, {\n        column: 4,\n        children: /*#__PURE__*/_jsxs(Grid, {\n          h: \"100vh\",\n          w: \"100wh\",\n          templateRows: \"repeat(4, 1fr)\",\n          templateColumns: \"repeat(4, 1fr)\",\n          gap: 4,\n          children: [/*#__PURE__*/_jsxs(GridItem, {\n            rowSpan: 4,\n            p: \"2rem\",\n            colSpan: 3,\n            shadow: \"md\",\n            rounded: \"lg\",\n            children: [/*#__PURE__*/_jsx(Heading, {\n              as: \"h2\",\n              children: \"Mis cursos\"\n            }), classrooms]\n          }), /*#__PURE__*/_jsxs(GridItem, {\n            rowSpan: 1,\n            p: \"2rem\",\n            colSpan: 1,\n            shadow: \"md\",\n            rounded: \"lg\",\n            children: [/*#__PURE__*/_jsx(Heading, {\n              as: \"h2\",\n              children: \"Actividades\"\n            }), calendar]\n          }), /*#__PURE__*/_jsx(GridItem, {\n            rowSpan: 3,\n            p: \"2rem\",\n            colSpan: 1,\n            shadow: \"md\",\n            rounded: \"lg\",\n            children: /*#__PURE__*/_jsx(Stack, {\n              maxH: '100%',\n              overflowY: \"scroll\",\n              children: activities\n            })\n          })]\n        })\n      })\n    })]\n  });\n};\n\nexport default withUrqlClient(urqlClient)(Cursos);","map":null,"metadata":{},"sourceType":"module"}